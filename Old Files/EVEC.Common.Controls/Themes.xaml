<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Blacklight_Controls="clr-namespace:Blacklight.Controls;assembly=Blacklight.WPFControls" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" 
    xmlns:vsm="clr-namespace:System.Windows;assembly=WPFToolkit"
    xmlns:EVEC.Common="clr-namespace:EVEC.Common;assembly=EVEC.Common">
	<LinearGradientBrush x:Key="WindowBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FF020202" Offset="0"/>
		<GradientStop Color="#FF2C2C2C" Offset="1"/>
	</LinearGradientBrush>
    <Style x:Key="DragDockPanelTheme" TargetType="{x:Type Blacklight_Controls:DragDockPanel}">
        <Setter Property="Background" Value="#ff000000" />
        <Setter Property="BorderBrush" Value="#ff333333" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Blacklight_Controls:DragDockPanel}">
                    <Grid>

                        <!-- Border with white background -->
                        <Blacklight_Controls:OuterGlowBorder 
                            OuterGlowOpacity="0.4" OuterGlowSize="15"
                            CornerRadius="3,3,3,3" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                    >
                            <Blacklight_Controls:InnerGlowBorder
                                    InnerGlowOpacity="1" InnerGlowColor="#11ffffff" InnerGlowSize="15,15,0,0" Margin="0" Padding="2" ClipContent="True"
                                    Background="Transparent" BorderThickness="0">
                                <Grid>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <!-- Content presenter for hosting the content -->
                                    <ContentPresenter Grid.Row="1"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"/>

                                    <!-- 
                  Element named PART_GripBar for 
                  handling the dragging of the panel  
                  -->

                                    <Border Background="{DynamicResource GlossyBlack_PressedBackgroundGradient}" Padding="3" Margin="-2">
                                        <Grid>
                                            <Border x:Name="GripBarElement" Background="#00ffffff" VerticalAlignment="Top" MinHeight="35" Cursor="SizeAll" Margin="-3,-3,-3,-3" IsHitTestVisible="{TemplateBinding DraggingEnabled}">
                                                <Grid Margin="0,0,35,0">
                                                    <ContentPresenter Content="{TemplateBinding Header}" 
                                                              ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                                </Grid>
                                            </Border>
                                            
                                            <ToggleButton x:Name="MaximizeToggleButton" 
                              VerticalAlignment="Top" HorizontalAlignment="Right"
                              Margin="0,5,5,0" Width="20" Height="20" Cursor="Hand">
                                                <ToggleButton.Template>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border Background="#7F000000" CornerRadius="2,2,2,2">
                                                            <vsm:VisualStateManager.VisualStateGroups>
                                                                <vsm:VisualStateGroup x:Name="FocusStates">
                                                                    <vsm:VisualState x:Name="Focused"/>
                                                                    <vsm:VisualState x:Name="Unfocused"/>
                                                                </vsm:VisualStateGroup>
                                                                <vsm:VisualStateGroup x:Name="CommonStates">
                                                                    <vsm:VisualState x:Name="Disabled"/>
                                                                    <vsm:VisualState x:Name="Normal"/>
                                                                    <vsm:VisualState x:Name="MouseOver">
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
                                                                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.3"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </vsm:VisualState>
                                                                    <vsm:VisualState x:Name="Pressed">
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.15"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </vsm:VisualState>
                                                                </vsm:VisualStateGroup>
                                                                <vsm:VisualStateGroup x:Name="CheckStates">
                                                                    <vsm:VisualState x:Name="Checked">
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="checkedArrow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="uncheckedArrow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </vsm:VisualState>
                                                                    <vsm:VisualState x:Name="Unchecked">
                                                                        <Storyboard/>
                                                                    </vsm:VisualState>
                                                                    <vsm:VisualState x:Name="Indeterminate"/>
                                                                </vsm:VisualStateGroup>
                                                            </vsm:VisualStateManager.VisualStateGroups>
                                                            <Grid Height="Auto" Width="Auto">
                                                                <Border Margin="0,0,0,0" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" Width="16" Height="16">
                                                                    <Grid>
                                                                        <Path HorizontalAlignment="Right" Margin="0,1.24500000476837,1.70700001716614,5.375" x:Name="uncheckedArrow" VerticalAlignment="Stretch" Width="6.752" Stretch="Fill" Stroke="#FFFFFFFF" Data="M0.5,1.005 L6.2509999,1.005 M6.25,6.8800006 L6.25,0.5 M6.2520003,1.0880001 L0.50000024,6.8800001" />
                                                                        <Path HorizontalAlignment="Stretch" Margin="1.45899999141693,5.74200010299683,5.78900003433228,0.878000020980835" x:Name="checkedArrow" VerticalAlignment="Stretch" Stretch="Fill" Stroke="#FFFFFFFF" Data="M0.5,1.005 L6.2509999,1.005 M6.25,6.8800006 L6.25,0.5 M6.2520003,1.0880001 L0.50000024,6.8800001" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                                                            <Path.RenderTransform>
                                                                                <TransformGroup>
                                                                                    <ScaleTransform/>
                                                                                    <SkewTransform/>
                                                                                    <RotateTransform Angle="180"/>
                                                                                    <TranslateTransform/>
                                                                                </TransformGroup>
                                                                            </Path.RenderTransform>
                                                                        </Path>
                                                                    </Grid>
                                                                </Border>
                                                                <Rectangle Fill="#FFFFFFFF" RadiusX="2" RadiusY="2" Margin="1,1,1,1" Opacity="0" x:Name="rectangle"/>
                                                            </Grid>
                                                        </Border>
                                                    </ControlTemplate>
                                                </ToggleButton.Template>
                                            </ToggleButton>
                                        </Grid>
                                    </Border>



                                </Grid>
                            </Blacklight_Controls:InnerGlowBorder>
                        </Blacklight_Controls:OuterGlowBorder>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuTheme" TargetType="{x:Type Menu}">
    	<Setter Property="Foreground" Value="{DynamicResource GlossyBlack_Selected}"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Menu}">
    				<Border SnapsToDevicePixels="true" Background="{DynamicResource GlossyBlack_BackgroundGradient}">
    					<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
	<Style x:Key="DownRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Root">
                                    <vsm:VisualStateManager.VisualStateGroups>
                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                            <vsm:VisualStateGroup.Transitions>
                                                <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                            </vsm:VisualStateGroup.Transitions>
                                            <vsm:VisualState x:Name="Normal"/>
                                            <vsm:VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="gloss" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                        </vsm:VisualStateGroup>
                                    </vsm:VisualStateManager.VisualStateGroups>
                                    <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="NormalState">
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_HighlightGradient}"/>
                                    </Grid>
                                    <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="MouseOverState" Opacity="0">
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_MouseOverBackgroundGradient}"/>
                                    </Grid>
                                    <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="PressedState" Opacity="0">
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedBackgroundGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedHighlightGradient}"/>
                                    </Grid>
                                    <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="DisabledState" Opacity="0">
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_DisabledBackgroundGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                                    </Grid>
                                    <Path Height="4" Width="8" Stretch="Uniform" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " x:Name="path" Fill="{DynamicResource GlossyBlack_GreyStateBackground}" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                                    	<Path.RenderTransform>
                                    		<TransformGroup>
                                    			<ScaleTransform ScaleX="1" ScaleY="-1"/>
                                    			<SkewTransform AngleX="0" AngleY="0"/>
                                    			<RotateTransform Angle="0"/>
                                    			<TranslateTransform X="0" Y="0"/>
                                    		</TransformGroup>
                                    	</Path.RenderTransform>
									</Path>
                                    <Path Height="Auto" HorizontalAlignment="Stretch" Margin="0,0,0,6" VerticalAlignment="Stretch" Stretch="Fill" Data="M100,12.903966 C59.117226,15.115555 23.108757,29.203354 -1.2437163E-14,60 L-3.2684966E-13,0 C12,-2.8610229E-06 100,0 100,0" x:Name="gloss" Fill="{DynamicResource GlossyBlack_GlossGradient}"/>
                                </Grid>
                	<ControlTemplate.Triggers>
                		<Trigger Property="IsVisible" Value="True">
                			<Setter Property="Visibility" TargetName="Root" Value="Visible"/>
                		</Trigger>
                		<Trigger Property="IsVisible" Value="False">
                			<Setter Property="Visibility" TargetName="Root" Value="Hidden"/>
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<Style x:Key="UpRepeatButton" TargetType="{x:Type RepeatButton}">
		<Style.Triggers>
		</Style.Triggers>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Root">
                                    <vsm:VisualStateManager.VisualStateGroups>
                                        <vsm:VisualStateGroup x:Name="CommonStates">
                                            <vsm:VisualStateGroup.Transitions>
                                                <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                <vsm:VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                            </vsm:VisualStateGroup.Transitions>
                                            <vsm:VisualState x:Name="Normal"/>
                                            <vsm:VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                            <vsm:VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="gloss" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </vsm:VisualState>
                                        </vsm:VisualStateGroup>
                                    </vsm:VisualStateManager.VisualStateGroups>
                                    <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="NormalState">
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_HighlightGradient}"/>
                                    </Grid>
                                    <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="MouseOverState" Opacity="0">
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_MouseOverBackgroundGradient}"/>
                                    </Grid>
                                    <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="PressedState" Opacity="0">
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedBackgroundGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedHighlightGradient}"/>
                                    </Grid>
                                    <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="DisabledState" Opacity="0">
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_DisabledBackgroundGradient}"/>
                                        <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                                    </Grid>
                                    <Path Height="4" Width="8" Stretch="Uniform" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " x:Name="path" Fill="{DynamicResource GlossyBlack_GreyStateBackground}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    </Path>
                                    <Path Height="Auto" HorizontalAlignment="Stretch" Margin="0,0,0,6" VerticalAlignment="Stretch" Stretch="Fill" Data="M100,12.903966 C59.117226,15.115555 23.108757,29.203354 -1.2437163E-14,60 L-3.2684966E-13,0 C12,-2.8610229E-06 100,0 100,0" x:Name="gloss" Fill="{DynamicResource GlossyBlack_GlossGradient}"/>
                                </Grid>
                	<ControlTemplate.Triggers>
                		<Trigger Property="IsVisible" Value="True">
                			<Setter Property="Visibility" TargetName="Root" Value="Visible"/>
                		</Trigger>
                		<Trigger Property="IsVisible" Value="False">
                			<Setter Property="Visibility" TargetName="Root" Value="Collapsed"/>
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FishEyeListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}" >
                    <Border SnapsToDevicePixels="true" x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Padding="0">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <RepeatButton Style="{DynamicResource UpRepeatButton}" Grid.Row="0" Command="ScrollBar.LineUpCommand" Delay="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                        <ScrollContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" x:Name="scrollContentPresenter"/>
                                        <RepeatButton Style="{DynamicResource DownRepeatButton}" Grid.Row="2" Command="ScrollBar.LineDownCommand" Delay="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <StackPanel Margin="0,0,0,0"	IsItemsHost="True" Orientation="Vertical" HorizontalAlignment="Stretch" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FishEyeListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Style.Resources>
            <Storyboard x:Key="OnSelected">
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="MaxWidth" To="160" />
                <DoubleAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Opacity" To="1.0" />
            </Storyboard>
            <Storyboard x:Key="MouseEnter">
                <DoubleAnimation Duration="0:0:1" Storyboard.TargetProperty="MaxWidth" To="160" />
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="1.0" />
            </Storyboard>
            <Storyboard x:Key="MouseLeave">
                <DoubleAnimation Duration="0:0:1" Storyboard.TargetProperty="MaxWidth" />
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
            </Storyboard>
        </Style.Resources>
        <Setter Property="MaxWidth" Value="100" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="Opacity" Value=".75" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <StackPanel Margin="0,0,0,0">
                        <Image x:Name="imgPortrait" Source="{Binding Path=PortraitSource}"/>
                        <Label x:Name="lblText" HorizontalAlignment="Center" Content="{Binding Path=CharacterName}" Foreground="{DynamicResource GlossyBlack_Selected}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Selector.Selected">
                <StopStoryboard BeginStoryboardName="MouseEnter_BeginStoryboard1"/>
                <BeginStoryboard Storyboard="{StaticResource OnSelected}" x:Name="OnSelected_BeginStoryboard"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Selector.Unselected">
                <StopStoryboard BeginStoryboardName="OnSelected_BeginStoryboard"/>
                <BeginStoryboard Storyboard="{StaticResource MouseLeave}" x:Name="MouseLeave_BeginStoryboard"/>
            </EventTrigger>
            <MultiTrigger>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource MouseLeave}" x:Name="MouseLeave_BeginStoryboard2"/>
                </MultiTrigger.ExitActions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource MouseEnter}" x:Name="MouseEnter_BeginStoryboard1"/>
                </MultiTrigger.EnterActions>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="Selector.IsSelected" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="GlassyBlackGroupBox" TargetType="{x:Type GroupBox}">
    	<Setter Property="BorderBrush" Value="#D5DFE5"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type GroupBox}">
    				<Grid SnapsToDevicePixels="true">
    					<Grid.ColumnDefinitions>
    						<ColumnDefinition Width="6"/>
    						<ColumnDefinition Width="Auto"/>
    						<ColumnDefinition Width="*"/>
    						<ColumnDefinition Width="6"/>
    					</Grid.ColumnDefinitions>
    					<Grid.RowDefinitions>
    						<RowDefinition Height="Auto"/>
    						<RowDefinition Height="Auto"/>
    						<RowDefinition Height="*"/>
    						<RowDefinition Height="6"/>
    					</Grid.RowDefinitions>
    					<Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="Transparent" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4"/>
    					<Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,0">
    						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True"/>
    					</Border>
    					<ContentPresenter Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2"/>
    					<Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
    						<Border.OpacityMask>
    							<MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
    								<Binding Path="ActualWidth" ElementName="Header"/>
    								<Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
    								<Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
    							</MultiBinding>
    						</Border.OpacityMask>
    						<Border BorderBrush="{DynamicResource GlossyBlack_StrokeGradient}" BorderThickness="{TemplateBinding BorderThickness}">
    							<Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
    						</Border>
    					</Border>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Setter Property="Foreground" Value="{DynamicResource GlossyBlack_Selected}"/>
    </Style>
    <Style x:Key="ListViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
    	<Setter Property="Foreground" Value="{DynamicResource GlossyBlack_Selected}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid x:Name="Root">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="7"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <vsm:VisualStateManager.VisualStateGroups>
                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                        <vsm:VisualStateGroup.Transitions>
                                            <vsm:VisualTransition GeneratedDuration="00:00:00.2000000"/>
                                        </vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualState x:Name="Normal">
                                            <Storyboard/>
                                        </vsm:VisualState>
                                        <vsm:VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </vsm:VisualState>
                                        <vsm:VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </vsm:VisualState>
                                        <vsm:VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </vsm:VisualState>
                                    </vsm:VisualStateGroup>
                                    <vsm:VisualStateGroup x:Name="FocusStates">
                                        <vsm:VisualStateGroup.Transitions>
                                            <vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
                                        </vsm:VisualStateGroup.Transitions>
                                        <vsm:VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </vsm:VisualState>
                                        <vsm:VisualState x:Name="Unfocused">
                                            <Storyboard/>
                                        </vsm:VisualState>
                                    </vsm:VisualStateGroup>
                                </vsm:VisualStateManager.VisualStateGroups>
                                <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="NormalState" Grid.RowSpan="2">
                                    <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                                <Border HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" BorderBrush="{DynamicResource GlossyBlack_StrokeGradient}" BorderThickness="0,0,0,1"/>
                                    <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_HighlightGradient}"/>
                                </Grid>
                                <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="MouseOverState" Opacity="0" Grid.RowSpan="2">
                                    <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                                    <Border HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" BorderBrush="{DynamicResource GlossyBlack_StrokeGradient}" BorderThickness="0,0,0,1"/>
                                    <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_MouseOverBackgroundGradient}"/>
                                </Grid>
                                <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="PressedState" Opacity="0" Grid.RowSpan="2">
                                    <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedBackgroundGradient}"/>
                                    <Border HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" BorderBrush="{DynamicResource GlossyBlack_StrokeGradient}" BorderThickness="0,0,0,1"/>
                                    <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedHighlightGradient}"/>
                                </Grid>
                                <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="DisabledState" Opacity="0" Grid.RowSpan="2">
                                    <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_DisabledBackgroundGradient}"/>
                                    <Border HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch" BorderBrush="{DynamicResource GlossyBlack_StrokeGradient}" BorderThickness="0,0,0,1"/>
                                    <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Opacity="0">
                                        <Rectangle.Fill>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.177" ScaleY="1.451"/>
                                                        <SkewTransform CenterX="0.5" CenterY="0.5"/>
                                                        <RotateTransform CenterX="0.5" CenterY="0.5"/>
                                                        <TranslateTransform Y="0.562"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="#4CFFFFFF"/>
                                                <GradientStop Color="#00000000" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                        <ContentPresenter HorizontalAlignment="Stretch" Margin="2,0,2,0" VerticalAlignment="Top" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" d:LayoutOverrides="Width, GridBox" Grid.RowSpan="2"/>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Background="{DynamicResource GlossyBlack_StrokeGradient}">
                                <Thumb.Style>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Canvas.Right" Value="-9"/>
                                        <Setter Property="Width" Value="18"/>
                                        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Setter Property="Padding" Value="0,0,0,0"/>
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                    <GradientStop Color="#FFF2F2F2" Offset="0"/>
                                                    <GradientStop Color="#FFD5D5D5" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="#00FFFFFF" Padding="{TemplateBinding Padding}">
                                                        <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="1"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Height" Value="NaN">
                            <Setter Property="MinHeight" Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    	<Setter Property="Focusable" Value="false"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ScrollViewer}">
    				<Grid SnapsToDevicePixels="true" Background="{DynamicResource GlossyBlack_StrokeGradient}">
    					<Grid.ColumnDefinitions>
    						<ColumnDefinition Width="*"/>
    						<ColumnDefinition Width="Auto"/>
    					</Grid.ColumnDefinitions>
    					<Grid.RowDefinitions>
    						<RowDefinition Height="*"/>
    						<RowDefinition Height="Auto"/>
    					</Grid.RowDefinitions>
    					<DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" Style="{DynamicResource GlossyBlackScrollViewer}" Background="{DynamicResource GlossyBlack_BackgroundGradient}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Foreground="#FFFFFFFF" Focusable="false" DockPanel.Dock="Top" BorderBrush="{x:Null}" BorderThickness="0,0,0,0">
                                <GridViewHeaderRowPresenter Margin="0,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{DynamicResource ListViewColumnHeader}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </ScrollViewer>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" KeyboardNavigation.DirectionalNavigation="Local"/>
    					</DockPanel>
    					<ScrollBar Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Row="1" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource GlossyBlackScrollBar}"/>
    					<ScrollBar Cursor="Arrow" x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource GlossyBlackScrollBar}"/>
    					<DockPanel Grid.Column="1" Grid.Row="1" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" LastChildFill="false">
    						<Rectangle Fill="{x:Null}" Width="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" DockPanel.Dock="Left"/>
    						<Rectangle Fill="{x:Null}" Height="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" DockPanel.Dock="Top"/>
    					</DockPanel>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="GlassyBlackListView" TargetType="{x:Type ListView}">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    	<Setter Property="VerticalContentAlignment" Value="Center"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ListView}">
                    <Border CornerRadius="0,0,0,0" BorderBrush="{DynamicResource GlossyBlack_StrokeGradient}">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsGrouping" Value="true">
    						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="GlassyBlackExpander" TargetType="{x:Type Expander}">
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    	<Setter Property="BorderBrush" Value="Transparent"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Expander}">
    				<Border SnapsToDevicePixels="true" BorderBrush="{DynamicResource GlossyBlack_StrokeGradient}" BorderThickness="{TemplateBinding BorderThickness}">
    					<DockPanel>
                            <ToggleButton Margin="1" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{DynamicResource GlossyBlackToggleButton}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="{DynamicResource GlossyBlack_Selected}" HorizontalContentAlignment="Left" Height="30">
                                <Grid Margin="10,0,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                	<Grid.ColumnDefinitions>
                                		<ColumnDefinition Width="Auto"/>
                                		<ColumnDefinition/>
                                	</Grid.ColumnDefinitions>
                            		<Path Width="8" Stretch="Uniform" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " x:Name="path" Fill="{DynamicResource GlossyBlack_GreyStateBackground}" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,5.98,0,5.98"/>
                            		<ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="18,0,0,0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            	</Grid>
                            </ToggleButton>


                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false" Visibility="Collapsed" DockPanel.Dock="Bottom"/>
    					</DockPanel>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsExpanded" Value="true">
    						<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
    						<Setter Property="RenderTransformOrigin" TargetName="path" Value="0.5,0.5"/>
    						<Setter Property="RenderTransform" TargetName="path">
    							<Setter.Value>
    								<TransformGroup>
    									<ScaleTransform ScaleX="1" ScaleY="-1"/>
    									<SkewTransform AngleX="0" AngleY="0"/>
    									<RotateTransform Angle="0"/>
    									<TranslateTransform X="0" Y="0"/>
    								</TransformGroup>
    							</Setter.Value>
    						</Setter>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Setter Property="Header" Value="Expander"/>
    </Style>
    <Style x:Key="GlossyBlackToggleButton" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource GlossyBlack_Selected}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                		<vsm:VisualStateManager.VisualStateGroups>
                			<vsm:VisualStateGroup x:Name="CommonStates">
                				<vsm:VisualStateGroup.Transitions>
                					<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                					<vsm:VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                				</vsm:VisualStateGroup.Transitions>
                				<vsm:VisualState x:Name="Normal"/>
                				<vsm:VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverState" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</vsm:VisualState>
                				<vsm:VisualState x:Name="Pressed">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedState" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</vsm:VisualState>
                				<vsm:VisualState x:Name="Disabled">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledState" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="gloss" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</vsm:VisualState>
                			</vsm:VisualStateGroup>
                			<vsm:VisualStateGroup x:Name="CheckStates">
                				<vsm:VisualState x:Name="Checked"/>
                				<vsm:VisualState x:Name="Unchecked"/>
                			</vsm:VisualStateGroup>
                			<vsm:VisualStateGroup x:Name="FocusStates">
                				<vsm:VisualState x:Name="Focused">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverState" Storyboard.TargetProperty="(UIElement.Opacity)">
                							<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</vsm:VisualState>
                				<vsm:VisualState x:Name="Unfocused"/>
                			</vsm:VisualStateGroup>
                		</vsm:VisualStateManager.VisualStateGroups>
                		<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="NormalState">
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_HighlightGradient}"/>
                    	</Grid>
                    	<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="MouseOverState" Opacity="0">
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_MouseOverBackgroundGradient}"/>
                    	</Grid>
                    	<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="PressedState" Opacity="0">
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedBackgroundGradient}"/>
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{x:Null}" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedHighlightGradient}"/>
                    	</Grid>
                    	<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="DisabledState" Opacity="0">
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_DisabledBackgroundGradient}"/>
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                    		<Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Opacity="0">
                    			<Rectangle.Fill>
                    				<RadialGradientBrush>
                    					<RadialGradientBrush.RelativeTransform>
                    						<TransformGroup>
                    							<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.177" ScaleY="1.451"/>
                    							<SkewTransform CenterX="0.5" CenterY="0.5"/>
                    							<RotateTransform CenterX="0.5" CenterY="0.5"/>
                    							<TranslateTransform Y="0.562"/>
                    						</TransformGroup>
                    					</RadialGradientBrush.RelativeTransform>
                    					<GradientStop Color="#4CFFFFFF"/>
                    					<GradientStop Color="#00000000" Offset="1"/>
                    				</RadialGradientBrush>
                    			</Rectangle.Fill>
                    		</Rectangle>
                    	</Grid>
                        <ContentPresenter Margin="4,5,4,4" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                    	<Path Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" Data="M100,12.903966 C59.117226,15.115555 23.108757,29.203354 -1.2437163E-14,60 L-3.2684966E-13,0 C12,-2.8610229E-06 100,0 100,0" x:Name="gloss" Fill="{DynamicResource GlossyBlack_GlossGradient}"/>
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>
    <Style x:Key="ListBoxItemTheme" TargetType="{x:Type ListBoxItem}">
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    	<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    	<Setter Property="Padding" Value="0"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ListBoxItem}">
    				<Border x:Name="Bd" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}">
    					<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="GlossyBlackListViewItem" TargetType="ListViewItem">
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="Padding" Value="5,2,5,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid Background="{TemplateBinding Background}">
                        <vsm:VisualStateManager.VisualStateGroups>
                            <vsm:VisualStateGroup x:Name="CommonStates">
                                <vsm:VisualState x:Name="Normal"/>
                                <vsm:VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOverState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="SelectionStates">
                                <vsm:VisualState x:Name="Unselected"/>
                                <vsm:VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="gloss" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </vsm:VisualState>
                            </vsm:VisualStateGroup>
                            <vsm:VisualStateGroup x:Name="FocusStates">
                                <vsm:VisualState x:Name="Focused">
                                    <Storyboard/>
                                </vsm:VisualState>
                                <vsm:VisualState x:Name="Unfocused"/>
                            </vsm:VisualStateGroup>
                        </vsm:VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="NormalState" Opacity="1">
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_ListItemBackground}"/>
                        </Grid>
                        <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="MouseOverState" Opacity="0">
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_MouseOverBackgroundGradient}"/>
                        </Grid>
                        <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="PressedState" Opacity="0">
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedBackgroundGradient}"/>
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_PressedHighlightGradient}"/>
                        </Grid>
                        <Grid HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" Width="Auto" Height="Auto" x:Name="SelectedState" Opacity="0">
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_BackgroundGradient}"/>
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Stroke="{DynamicResource GlossyBlack_StrokeGradient}"/>
                            <Rectangle HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch" RadiusX="0" RadiusY="0" Fill="{DynamicResource GlossyBlack_MouseOverBackgroundGradient}"/>
                        </Grid>
                        <Rectangle Margin="0,0,0,0" x:Name="gloss" Opacity="0" Stroke="{x:Null}" Fill="{DynamicResource GlossyBlack_RectangleGlossGradient}"/>
                        <GridViewRowPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.RowSpan="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource GlossyBlack_Selected}"/>
    </Style>
    
    
        
</ResourceDictionary>